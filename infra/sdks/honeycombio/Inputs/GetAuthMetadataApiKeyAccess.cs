// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio.Inputs
{

    public sealed class GetAuthMetadataApiKeyAccessArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Whether this API key can create and manage Boards.
        /// </summary>
        [Input("boards", required: true)]
        public bool Boards { get; set; }

        /// <summary>
        /// Whether this API key can create and manage Queries, Columns, Derived Columns, and Query Annotations.
        /// </summary>
        [Input("columns", required: true)]
        public bool Columns { get; set; }

        /// <summary>
        /// Whether this API key can create and manage Datasets.
        /// </summary>
        [Input("datasets", required: true)]
        public bool Datasets { get; set; }

        /// <summary>
        /// Whether this API key can send events to Honeycomb.
        /// </summary>
        [Input("events", required: true)]
        public bool Events { get; set; }

        /// <summary>
        /// Whether this API key can create and manage Markers.
        /// </summary>
        [Input("markers", required: true)]
        public bool Markers { get; set; }

        /// <summary>
        /// Whether this API key can execute existing Queries via the Query Data API.
        /// </summary>
        [Input("queries", required: true)]
        public bool Queries { get; set; }

        /// <summary>
        /// Whether this API key can create and manage Recipients.
        /// </summary>
        [Input("recipients", required: true)]
        public bool Recipients { get; set; }

        /// <summary>
        /// Whether this API key can create and manage SLOs and Burn Alerts.
        /// </summary>
        [Input("slos", required: true)]
        public bool Slos { get; set; }

        /// <summary>
        /// Whether this API key can create and manage Triggers.
        /// </summary>
        [Input("triggers", required: true)]
        public bool Triggers { get; set; }

        public GetAuthMetadataApiKeyAccessArgs()
        {
        }
        public static new GetAuthMetadataApiKeyAccessArgs Empty => new GetAuthMetadataApiKeyAccessArgs();
    }
}
