// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    [HoneycombioResourceType("honeycombio:index/pagerdutyRecipient:PagerdutyRecipient")]
    public partial class PagerdutyRecipient : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The key of the PagerDuty Integration to send the notification to
        /// </summary>
        [Output("integrationKey")]
        public Output<string> IntegrationKey { get; private set; } = null!;

        /// <summary>
        /// The name of the PagerDuty Integration to send the notification to
        /// </summary>
        [Output("integrationName")]
        public Output<string> IntegrationName { get; private set; } = null!;

        [Output("pagerdutyRecipientId")]
        public Output<string> PagerdutyRecipientId { get; private set; } = null!;


        /// <summary>
        /// Create a PagerdutyRecipient resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PagerdutyRecipient(string name, PagerdutyRecipientArgs args, CustomResourceOptions? options = null)
            : base("honeycombio:index/pagerdutyRecipient:PagerdutyRecipient", name, args ?? new PagerdutyRecipientArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private PagerdutyRecipient(string name, Input<string> id, PagerdutyRecipientState? state = null, CustomResourceOptions? options = null)
            : base("honeycombio:index/pagerdutyRecipient:PagerdutyRecipient", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "integrationKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PagerdutyRecipient resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PagerdutyRecipient Get(string name, Input<string> id, PagerdutyRecipientState? state = null, CustomResourceOptions? options = null)
        {
            return new PagerdutyRecipient(name, id, state, options);
        }
    }

    public sealed class PagerdutyRecipientArgs : global::Pulumi.ResourceArgs
    {
        [Input("integrationKey", required: true)]
        private Input<string>? _integrationKey;

        /// <summary>
        /// The key of the PagerDuty Integration to send the notification to
        /// </summary>
        public Input<string>? IntegrationKey
        {
            get => _integrationKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _integrationKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the PagerDuty Integration to send the notification to
        /// </summary>
        [Input("integrationName", required: true)]
        public Input<string> IntegrationName { get; set; } = null!;

        [Input("pagerdutyRecipientId")]
        public Input<string>? PagerdutyRecipientId { get; set; }

        public PagerdutyRecipientArgs()
        {
        }
        public static new PagerdutyRecipientArgs Empty => new PagerdutyRecipientArgs();
    }

    public sealed class PagerdutyRecipientState : global::Pulumi.ResourceArgs
    {
        [Input("integrationKey")]
        private Input<string>? _integrationKey;

        /// <summary>
        /// The key of the PagerDuty Integration to send the notification to
        /// </summary>
        public Input<string>? IntegrationKey
        {
            get => _integrationKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _integrationKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the PagerDuty Integration to send the notification to
        /// </summary>
        [Input("integrationName")]
        public Input<string>? IntegrationName { get; set; }

        [Input("pagerdutyRecipientId")]
        public Input<string>? PagerdutyRecipientId { get; set; }

        public PagerdutyRecipientState()
        {
        }
        public static new PagerdutyRecipientState Empty => new PagerdutyRecipientState();
    }
}
