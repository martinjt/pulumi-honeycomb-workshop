// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    public static class GetDatasets
    {
        public static Task<GetDatasetsResult> InvokeAsync(GetDatasetsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatasetsResult>("honeycombio:index/getDatasets:getDatasets", args ?? new GetDatasetsArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetDatasetsResult> Invoke(GetDatasetsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatasetsResult>("honeycombio:index/getDatasets:getDatasets", args ?? new GetDatasetsInvokeArgs(), options.WithDefaults());

        public static Output<GetDatasetsResult> Invoke(GetDatasetsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatasetsResult>("honeycombio:index/getDatasets:getDatasets", args ?? new GetDatasetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatasetsArgs : global::Pulumi.InvokeArgs
    {
        [Input("detailFilters")]
        private List<Inputs.GetDatasetsDetailFilterArgs>? _detailFilters;
        public List<Inputs.GetDatasetsDetailFilterArgs> DetailFilters
        {
            get => _detailFilters ?? (_detailFilters = new List<Inputs.GetDatasetsDetailFilterArgs>());
            set => _detailFilters = value;
        }

        [Input("startsWith")]
        public string? StartsWith { get; set; }

        public GetDatasetsArgs()
        {
        }
        public static new GetDatasetsArgs Empty => new GetDatasetsArgs();
    }

    public sealed class GetDatasetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("detailFilters")]
        private InputList<Inputs.GetDatasetsDetailFilterInputArgs>? _detailFilters;
        public InputList<Inputs.GetDatasetsDetailFilterInputArgs> DetailFilters
        {
            get => _detailFilters ?? (_detailFilters = new InputList<Inputs.GetDatasetsDetailFilterInputArgs>());
            set => _detailFilters = value;
        }

        [Input("startsWith")]
        public Input<string>? StartsWith { get; set; }

        public GetDatasetsInvokeArgs()
        {
        }
        public static new GetDatasetsInvokeArgs Empty => new GetDatasetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatasetsResult
    {
        public readonly ImmutableArray<Outputs.GetDatasetsDetailFilterResult> DetailFilters;
        public readonly string Id;
        public readonly ImmutableArray<string> Names;
        public readonly ImmutableArray<string> Slugs;
        public readonly string? StartsWith;

        [OutputConstructor]
        private GetDatasetsResult(
            ImmutableArray<Outputs.GetDatasetsDetailFilterResult> detailFilters,

            string id,

            ImmutableArray<string> names,

            ImmutableArray<string> slugs,

            string? startsWith)
        {
            DetailFilters = detailFilters;
            Id = id;
            Names = names;
            Slugs = slugs;
            StartsWith = startsWith;
        }
    }
}
