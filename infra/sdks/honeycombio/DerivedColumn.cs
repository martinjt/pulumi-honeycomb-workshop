// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    [HoneycombioResourceType("honeycombio:index/derivedColumn:DerivedColumn")]
    public partial class DerivedColumn : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The alias of the derived column. Must be unique within the dataset or environment.
        /// </summary>
        [Output("alias")]
        public Output<string> Alias { get; private set; } = null!;

        /// <summary>
        /// The dataset this derived column belongs to. If not set, it will be Environment-wide.
        /// </summary>
        [Output("dataset")]
        public Output<string?> Dataset { get; private set; } = null!;

        [Output("derivedColumnId")]
        public Output<string> DerivedColumnId { get; private set; } = null!;

        /// <summary>
        /// A description of the derived column.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The formula of the derived column. See [Derived Column
        /// Syntax](https://docs.honeycomb.io/reference/derived-column-formula/syntax/).
        /// </summary>
        [Output("expression")]
        public Output<string> Expression { get; private set; } = null!;


        /// <summary>
        /// Create a DerivedColumn resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DerivedColumn(string name, DerivedColumnArgs args, CustomResourceOptions? options = null)
            : base("honeycombio:index/derivedColumn:DerivedColumn", name, args ?? new DerivedColumnArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private DerivedColumn(string name, Input<string> id, DerivedColumnState? state = null, CustomResourceOptions? options = null)
            : base("honeycombio:index/derivedColumn:DerivedColumn", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DerivedColumn resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DerivedColumn Get(string name, Input<string> id, DerivedColumnState? state = null, CustomResourceOptions? options = null)
        {
            return new DerivedColumn(name, id, state, options);
        }
    }

    public sealed class DerivedColumnArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The alias of the derived column. Must be unique within the dataset or environment.
        /// </summary>
        [Input("alias", required: true)]
        public Input<string> Alias { get; set; } = null!;

        /// <summary>
        /// The dataset this derived column belongs to. If not set, it will be Environment-wide.
        /// </summary>
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        [Input("derivedColumnId")]
        public Input<string>? DerivedColumnId { get; set; }

        /// <summary>
        /// A description of the derived column.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The formula of the derived column. See [Derived Column
        /// Syntax](https://docs.honeycomb.io/reference/derived-column-formula/syntax/).
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        public DerivedColumnArgs()
        {
        }
        public static new DerivedColumnArgs Empty => new DerivedColumnArgs();
    }

    public sealed class DerivedColumnState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The alias of the derived column. Must be unique within the dataset or environment.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// The dataset this derived column belongs to. If not set, it will be Environment-wide.
        /// </summary>
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        [Input("derivedColumnId")]
        public Input<string>? DerivedColumnId { get; set; }

        /// <summary>
        /// A description of the derived column.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The formula of the derived column. See [Derived Column
        /// Syntax](https://docs.honeycomb.io/reference/derived-column-formula/syntax/).
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        public DerivedColumnState()
        {
        }
        public static new DerivedColumnState Empty => new DerivedColumnState();
    }
}
