// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio.Outputs
{

    [OutputType]
    public sealed class BurnAlertRecipient
    {
        /// <summary>
        /// The ID of an existing recipient.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Additional details to send along with the notification.
        /// </summary>
        public readonly ImmutableArray<Outputs.BurnAlertRecipientNotificationDetail> NotificationDetails;
        /// <summary>
        /// Target of the notification, this has another meaning depending on the type of recipient.
        /// </summary>
        public readonly string? Target;
        /// <summary>
        /// The type of the notification recipient.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private BurnAlertRecipient(
            string? id,

            ImmutableArray<Outputs.BurnAlertRecipientNotificationDetail> notificationDetails,

            string? target,

            string? type)
        {
            Id = id;
            NotificationDetails = notificationDetails;
            Target = target;
            Type = type;
        }
    }
}
