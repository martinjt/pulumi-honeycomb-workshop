// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    public static class GetAuthMetadata
    {
        public static Task<GetAuthMetadataResult> InvokeAsync(GetAuthMetadataArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthMetadataResult>("honeycombio:index/getAuthMetadata:getAuthMetadata", args ?? new GetAuthMetadataArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetAuthMetadataResult> Invoke(GetAuthMetadataInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthMetadataResult>("honeycombio:index/getAuthMetadata:getAuthMetadata", args ?? new GetAuthMetadataInvokeArgs(), options.WithDefaults());

        public static Output<GetAuthMetadataResult> Invoke(GetAuthMetadataInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthMetadataResult>("honeycombio:index/getAuthMetadata:getAuthMetadata", args ?? new GetAuthMetadataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthMetadataArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiKeyAccess")]
        public Inputs.GetAuthMetadataApiKeyAccessArgs? ApiKeyAccess { get; set; }

        [Input("environment")]
        public Inputs.GetAuthMetadataEnvironmentArgs? Environment { get; set; }

        [Input("team")]
        public Inputs.GetAuthMetadataTeamArgs? Team { get; set; }

        public GetAuthMetadataArgs()
        {
        }
        public static new GetAuthMetadataArgs Empty => new GetAuthMetadataArgs();
    }

    public sealed class GetAuthMetadataInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiKeyAccess")]
        public Input<Inputs.GetAuthMetadataApiKeyAccessInputArgs>? ApiKeyAccess { get; set; }

        [Input("environment")]
        public Input<Inputs.GetAuthMetadataEnvironmentInputArgs>? Environment { get; set; }

        [Input("team")]
        public Input<Inputs.GetAuthMetadataTeamInputArgs>? Team { get; set; }

        public GetAuthMetadataInvokeArgs()
        {
        }
        public static new GetAuthMetadataInvokeArgs Empty => new GetAuthMetadataInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthMetadataResult
    {
        public readonly Outputs.GetAuthMetadataApiKeyAccessResult? ApiKeyAccess;
        public readonly Outputs.GetAuthMetadataEnvironmentResult? Environment;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetAuthMetadataTeamResult? Team;

        [OutputConstructor]
        private GetAuthMetadataResult(
            Outputs.GetAuthMetadataApiKeyAccessResult? apiKeyAccess,

            Outputs.GetAuthMetadataEnvironmentResult? environment,

            string id,

            Outputs.GetAuthMetadataTeamResult? team)
        {
            ApiKeyAccess = apiKeyAccess;
            Environment = environment;
            Id = id;
            Team = team;
        }
    }
}
