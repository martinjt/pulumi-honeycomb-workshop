// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    public static class GetRecipients
    {
        public static Task<GetRecipientsResult> InvokeAsync(GetRecipientsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRecipientsResult>("honeycombio:index/getRecipients:getRecipients", args ?? new GetRecipientsArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetRecipientsResult> Invoke(GetRecipientsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecipientsResult>("honeycombio:index/getRecipients:getRecipients", args ?? new GetRecipientsInvokeArgs(), options.WithDefaults());

        public static Output<GetRecipientsResult> Invoke(GetRecipientsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecipientsResult>("honeycombio:index/getRecipients:getRecipients", args ?? new GetRecipientsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecipientsArgs : global::Pulumi.InvokeArgs
    {
        [Input("detailFilter")]
        public Inputs.GetRecipientsDetailFilterArgs? DetailFilter { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        public GetRecipientsArgs()
        {
        }
        public static new GetRecipientsArgs Empty => new GetRecipientsArgs();
    }

    public sealed class GetRecipientsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("detailFilter")]
        public Input<Inputs.GetRecipientsDetailFilterInputArgs>? DetailFilter { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetRecipientsInvokeArgs()
        {
        }
        public static new GetRecipientsInvokeArgs Empty => new GetRecipientsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRecipientsResult
    {
        public readonly Outputs.GetRecipientsDetailFilterResult? DetailFilter;
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? Type;

        [OutputConstructor]
        private GetRecipientsResult(
            Outputs.GetRecipientsDetailFilterResult? detailFilter,

            string id,

            ImmutableArray<string> ids,

            string? type)
        {
            DetailFilter = detailFilter;
            Id = id;
            Ids = ids;
            Type = type;
        }
    }
}
