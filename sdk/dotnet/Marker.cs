// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    [HoneycombioResourceType("honeycombio:index/marker:Marker")]
    public partial class Marker : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The dataset where this marker is placed. If not set, it will be Environment-wide.
        /// </summary>
        [Output("dataset")]
        public Output<string?> Dataset { get; private set; } = null!;

        [Output("markerId")]
        public Output<string> MarkerId { get; private set; } = null!;

        /// <summary>
        /// A message that appears above the marker and can be used to describe the marker.
        /// </summary>
        [Output("message")]
        public Output<string?> Message { get; private set; } = null!;

        /// <summary>
        /// The type of the marker (e.g. "deploy", "job-run")
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// A target URL for the Marker. Rendered as a link in the UI.
        /// </summary>
        [Output("url")]
        public Output<string?> Url { get; private set; } = null!;


        /// <summary>
        /// Create a Marker resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Marker(string name, MarkerArgs? args = null, CustomResourceOptions? options = null)
            : base("honeycombio:index/marker:Marker", name, args ?? new MarkerArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private Marker(string name, Input<string> id, MarkerState? state = null, CustomResourceOptions? options = null)
            : base("honeycombio:index/marker:Marker", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Marker resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Marker Get(string name, Input<string> id, MarkerState? state = null, CustomResourceOptions? options = null)
        {
            return new Marker(name, id, state, options);
        }
    }

    public sealed class MarkerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The dataset where this marker is placed. If not set, it will be Environment-wide.
        /// </summary>
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        [Input("markerId")]
        public Input<string>? MarkerId { get; set; }

        /// <summary>
        /// A message that appears above the marker and can be used to describe the marker.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// The type of the marker (e.g. "deploy", "job-run")
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// A target URL for the Marker. Rendered as a link in the UI.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public MarkerArgs()
        {
        }
        public static new MarkerArgs Empty => new MarkerArgs();
    }

    public sealed class MarkerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The dataset where this marker is placed. If not set, it will be Environment-wide.
        /// </summary>
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        [Input("markerId")]
        public Input<string>? MarkerId { get; set; }

        /// <summary>
        /// A message that appears above the marker and can be used to describe the marker.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// The type of the marker (e.g. "deploy", "job-run")
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// A target URL for the Marker. Rendered as a link in the UI.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public MarkerState()
        {
        }
        public static new MarkerState Empty => new MarkerState();
    }
}
