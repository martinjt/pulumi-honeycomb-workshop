// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    public static class GetEnvironments
    {
        public static Task<GetEnvironmentsResult> InvokeAsync(GetEnvironmentsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentsResult>("honeycombio:index/getEnvironments:getEnvironments", args ?? new GetEnvironmentsArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetEnvironmentsResult> Invoke(GetEnvironmentsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentsResult>("honeycombio:index/getEnvironments:getEnvironments", args ?? new GetEnvironmentsInvokeArgs(), options.WithDefaults());

        public static Output<GetEnvironmentsResult> Invoke(GetEnvironmentsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentsResult>("honeycombio:index/getEnvironments:getEnvironments", args ?? new GetEnvironmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentsArgs : global::Pulumi.InvokeArgs
    {
        [Input("detailFilters")]
        private List<Inputs.GetEnvironmentsDetailFilterArgs>? _detailFilters;
        public List<Inputs.GetEnvironmentsDetailFilterArgs> DetailFilters
        {
            get => _detailFilters ?? (_detailFilters = new List<Inputs.GetEnvironmentsDetailFilterArgs>());
            set => _detailFilters = value;
        }

        public GetEnvironmentsArgs()
        {
        }
        public static new GetEnvironmentsArgs Empty => new GetEnvironmentsArgs();
    }

    public sealed class GetEnvironmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("detailFilters")]
        private InputList<Inputs.GetEnvironmentsDetailFilterInputArgs>? _detailFilters;
        public InputList<Inputs.GetEnvironmentsDetailFilterInputArgs> DetailFilters
        {
            get => _detailFilters ?? (_detailFilters = new InputList<Inputs.GetEnvironmentsDetailFilterInputArgs>());
            set => _detailFilters = value;
        }

        public GetEnvironmentsInvokeArgs()
        {
        }
        public static new GetEnvironmentsInvokeArgs Empty => new GetEnvironmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentsResult
    {
        public readonly ImmutableArray<Outputs.GetEnvironmentsDetailFilterResult> DetailFilters;
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;

        [OutputConstructor]
        private GetEnvironmentsResult(
            ImmutableArray<Outputs.GetEnvironmentsDetailFilterResult> detailFilters,

            string id,

            ImmutableArray<string> ids)
        {
            DetailFilters = detailFilters;
            Id = id;
            Ids = ids;
        }
    }
}
