// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    public static class GetDataset
    {
        public static Task<GetDatasetResult> InvokeAsync(GetDatasetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatasetResult>("honeycombio:index/getDataset:getDataset", args ?? new GetDatasetArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetDatasetResult> Invoke(GetDatasetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatasetResult>("honeycombio:index/getDataset:getDataset", args ?? new GetDatasetInvokeArgs(), options.WithDefaults());

        public static Output<GetDatasetResult> Invoke(GetDatasetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatasetResult>("honeycombio:index/getDataset:getDataset", args ?? new GetDatasetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatasetArgs : global::Pulumi.InvokeArgs
    {
        [Input("slug", required: true)]
        public string Slug { get; set; } = null!;

        public GetDatasetArgs()
        {
        }
        public static new GetDatasetArgs Empty => new GetDatasetArgs();
    }

    public sealed class GetDatasetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        public GetDatasetInvokeArgs()
        {
        }
        public static new GetDatasetInvokeArgs Empty => new GetDatasetInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatasetResult
    {
        public readonly string CreatedAt;
        public readonly bool DeleteProtected;
        public readonly string Description;
        public readonly double ExpandJsonDepth;
        public readonly string Id;
        public readonly string LastWrittenAt;
        public readonly string Name;
        public readonly string Slug;

        [OutputConstructor]
        private GetDatasetResult(
            string createdAt,

            bool deleteProtected,

            string description,

            double expandJsonDepth,

            string id,

            string lastWrittenAt,

            string name,

            string slug)
        {
            CreatedAt = createdAt;
            DeleteProtected = deleteProtected;
            Description = description;
            ExpandJsonDepth = expandJsonDepth;
            Id = id;
            LastWrittenAt = lastWrittenAt;
            Name = name;
            Slug = slug;
        }
    }
}
