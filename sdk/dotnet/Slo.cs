// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    [HoneycombioResourceType("honeycombio:index/slo:Slo")]
    public partial class Slo : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The dataset this SLO is created in. Will be deprecated in a future release. Must be the same dataset as the SLI unless
        /// the SLI Derived Column is Environment-wide.
        /// </summary>
        [Output("dataset")]
        public Output<string> Dataset { get; private set; } = null!;

        /// <summary>
        /// The datasets the SLO is evaluated on.
        /// </summary>
        [Output("datasets")]
        public Output<ImmutableArray<string>> Datasets { get; private set; } = null!;

        /// <summary>
        /// A description of the SLO's intent and context.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the SLO.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The alias of the Derived Column that will be used as the SLI to indicate event success. The derived column used as the
        /// SLI must be in the same dataset as the SLO. Additionally, the column evaluation should consistently return nil, true, or
        /// false, as these are the only valid values for an SLI.
        /// </summary>
        [Output("sli")]
        public Output<string> Sli { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The percentage of qualified events that you expect to succeed during the `time_period`.
        /// </summary>
        [Output("targetPercentage")]
        public Output<double> TargetPercentage { get; private set; } = null!;

        /// <summary>
        /// The time period, in days, over which your SLO will be evaluated.
        /// </summary>
        [Output("timePeriod")]
        public Output<double> TimePeriod { get; private set; } = null!;


        /// <summary>
        /// Create a Slo resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Slo(string name, SloArgs args, CustomResourceOptions? options = null)
            : base("honeycombio:index/slo:Slo", name, args ?? new SloArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private Slo(string name, Input<string> id, SloState? state = null, CustomResourceOptions? options = null)
            : base("honeycombio:index/slo:Slo", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Slo resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Slo Get(string name, Input<string> id, SloState? state = null, CustomResourceOptions? options = null)
        {
            return new Slo(name, id, state, options);
        }
    }

    public sealed class SloArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The dataset this SLO is created in. Will be deprecated in a future release. Must be the same dataset as the SLI unless
        /// the SLI Derived Column is Environment-wide.
        /// </summary>
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        [Input("datasets")]
        private InputList<string>? _datasets;

        /// <summary>
        /// The datasets the SLO is evaluated on.
        /// </summary>
        public InputList<string> Datasets
        {
            get => _datasets ?? (_datasets = new InputList<string>());
            set => _datasets = value;
        }

        /// <summary>
        /// A description of the SLO's intent and context.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the SLO.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The alias of the Derived Column that will be used as the SLI to indicate event success. The derived column used as the
        /// SLI must be in the same dataset as the SLO. Additionally, the column evaluation should consistently return nil, true, or
        /// false, as these are the only valid values for an SLI.
        /// </summary>
        [Input("sli", required: true)]
        public Input<string> Sli { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The percentage of qualified events that you expect to succeed during the `time_period`.
        /// </summary>
        [Input("targetPercentage", required: true)]
        public Input<double> TargetPercentage { get; set; } = null!;

        /// <summary>
        /// The time period, in days, over which your SLO will be evaluated.
        /// </summary>
        [Input("timePeriod", required: true)]
        public Input<double> TimePeriod { get; set; } = null!;

        public SloArgs()
        {
        }
        public static new SloArgs Empty => new SloArgs();
    }

    public sealed class SloState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The dataset this SLO is created in. Will be deprecated in a future release. Must be the same dataset as the SLI unless
        /// the SLI Derived Column is Environment-wide.
        /// </summary>
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        [Input("datasets")]
        private InputList<string>? _datasets;

        /// <summary>
        /// The datasets the SLO is evaluated on.
        /// </summary>
        public InputList<string> Datasets
        {
            get => _datasets ?? (_datasets = new InputList<string>());
            set => _datasets = value;
        }

        /// <summary>
        /// A description of the SLO's intent and context.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the SLO.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The alias of the Derived Column that will be used as the SLI to indicate event success. The derived column used as the
        /// SLI must be in the same dataset as the SLO. Additionally, the column evaluation should consistently return nil, true, or
        /// false, as these are the only valid values for an SLI.
        /// </summary>
        [Input("sli")]
        public Input<string>? Sli { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The percentage of qualified events that you expect to succeed during the `time_period`.
        /// </summary>
        [Input("targetPercentage")]
        public Input<double>? TargetPercentage { get; set; }

        /// <summary>
        /// The time period, in days, over which your SLO will be evaluated.
        /// </summary>
        [Input("timePeriod")]
        public Input<double>? TimePeriod { get; set; }

        public SloState()
        {
        }
        public static new SloState Empty => new SloState();
    }
}
