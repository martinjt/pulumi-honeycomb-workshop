// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    public static class GetQuerySpecification
    {
        public static Task<GetQuerySpecificationResult> InvokeAsync(GetQuerySpecificationArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQuerySpecificationResult>("honeycombio:index/getQuerySpecification:getQuerySpecification", args ?? new GetQuerySpecificationArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetQuerySpecificationResult> Invoke(GetQuerySpecificationInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQuerySpecificationResult>("honeycombio:index/getQuerySpecification:getQuerySpecification", args ?? new GetQuerySpecificationInvokeArgs(), options.WithDefaults());

        public static Output<GetQuerySpecificationResult> Invoke(GetQuerySpecificationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetQuerySpecificationResult>("honeycombio:index/getQuerySpecification:getQuerySpecification", args ?? new GetQuerySpecificationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQuerySpecificationArgs : global::Pulumi.InvokeArgs
    {
        [Input("breakdowns")]
        private List<string>? _breakdowns;
        public List<string> Breakdowns
        {
            get => _breakdowns ?? (_breakdowns = new List<string>());
            set => _breakdowns = value;
        }

        [Input("calculatedFields")]
        private List<Inputs.GetQuerySpecificationCalculatedFieldArgs>? _calculatedFields;
        public List<Inputs.GetQuerySpecificationCalculatedFieldArgs> CalculatedFields
        {
            get => _calculatedFields ?? (_calculatedFields = new List<Inputs.GetQuerySpecificationCalculatedFieldArgs>());
            set => _calculatedFields = value;
        }

        [Input("calculations")]
        private List<Inputs.GetQuerySpecificationCalculationArgs>? _calculations;
        public List<Inputs.GetQuerySpecificationCalculationArgs> Calculations
        {
            get => _calculations ?? (_calculations = new List<Inputs.GetQuerySpecificationCalculationArgs>());
            set => _calculations = value;
        }

        [Input("endTime")]
        public double? EndTime { get; set; }

        [Input("filterCombination")]
        public string? FilterCombination { get; set; }

        [Input("filters")]
        private List<Inputs.GetQuerySpecificationFilterArgs>? _filters;
        public List<Inputs.GetQuerySpecificationFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetQuerySpecificationFilterArgs>());
            set => _filters = value;
        }

        [Input("granularity")]
        public double? Granularity { get; set; }

        [Input("havings")]
        private List<Inputs.GetQuerySpecificationHavingArgs>? _havings;
        public List<Inputs.GetQuerySpecificationHavingArgs> Havings
        {
            get => _havings ?? (_havings = new List<Inputs.GetQuerySpecificationHavingArgs>());
            set => _havings = value;
        }

        [Input("limit")]
        public double? Limit { get; set; }

        [Input("orders")]
        private List<Inputs.GetQuerySpecificationOrderArgs>? _orders;
        public List<Inputs.GetQuerySpecificationOrderArgs> Orders
        {
            get => _orders ?? (_orders = new List<Inputs.GetQuerySpecificationOrderArgs>());
            set => _orders = value;
        }

        [Input("startTime")]
        public double? StartTime { get; set; }

        [Input("timeRange")]
        public double? TimeRange { get; set; }

        public GetQuerySpecificationArgs()
        {
        }
        public static new GetQuerySpecificationArgs Empty => new GetQuerySpecificationArgs();
    }

    public sealed class GetQuerySpecificationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("breakdowns")]
        private InputList<string>? _breakdowns;
        public InputList<string> Breakdowns
        {
            get => _breakdowns ?? (_breakdowns = new InputList<string>());
            set => _breakdowns = value;
        }

        [Input("calculatedFields")]
        private InputList<Inputs.GetQuerySpecificationCalculatedFieldInputArgs>? _calculatedFields;
        public InputList<Inputs.GetQuerySpecificationCalculatedFieldInputArgs> CalculatedFields
        {
            get => _calculatedFields ?? (_calculatedFields = new InputList<Inputs.GetQuerySpecificationCalculatedFieldInputArgs>());
            set => _calculatedFields = value;
        }

        [Input("calculations")]
        private InputList<Inputs.GetQuerySpecificationCalculationInputArgs>? _calculations;
        public InputList<Inputs.GetQuerySpecificationCalculationInputArgs> Calculations
        {
            get => _calculations ?? (_calculations = new InputList<Inputs.GetQuerySpecificationCalculationInputArgs>());
            set => _calculations = value;
        }

        [Input("endTime")]
        public Input<double>? EndTime { get; set; }

        [Input("filterCombination")]
        public Input<string>? FilterCombination { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetQuerySpecificationFilterInputArgs>? _filters;
        public InputList<Inputs.GetQuerySpecificationFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetQuerySpecificationFilterInputArgs>());
            set => _filters = value;
        }

        [Input("granularity")]
        public Input<double>? Granularity { get; set; }

        [Input("havings")]
        private InputList<Inputs.GetQuerySpecificationHavingInputArgs>? _havings;
        public InputList<Inputs.GetQuerySpecificationHavingInputArgs> Havings
        {
            get => _havings ?? (_havings = new InputList<Inputs.GetQuerySpecificationHavingInputArgs>());
            set => _havings = value;
        }

        [Input("limit")]
        public Input<double>? Limit { get; set; }

        [Input("orders")]
        private InputList<Inputs.GetQuerySpecificationOrderInputArgs>? _orders;
        public InputList<Inputs.GetQuerySpecificationOrderInputArgs> Orders
        {
            get => _orders ?? (_orders = new InputList<Inputs.GetQuerySpecificationOrderInputArgs>());
            set => _orders = value;
        }

        [Input("startTime")]
        public Input<double>? StartTime { get; set; }

        [Input("timeRange")]
        public Input<double>? TimeRange { get; set; }

        public GetQuerySpecificationInvokeArgs()
        {
        }
        public static new GetQuerySpecificationInvokeArgs Empty => new GetQuerySpecificationInvokeArgs();
    }


    [OutputType]
    public sealed class GetQuerySpecificationResult
    {
        public readonly ImmutableArray<string> Breakdowns;
        public readonly ImmutableArray<Outputs.GetQuerySpecificationCalculatedFieldResult> CalculatedFields;
        public readonly ImmutableArray<Outputs.GetQuerySpecificationCalculationResult> Calculations;
        public readonly double? EndTime;
        public readonly string? FilterCombination;
        public readonly ImmutableArray<Outputs.GetQuerySpecificationFilterResult> Filters;
        public readonly double? Granularity;
        public readonly ImmutableArray<Outputs.GetQuerySpecificationHavingResult> Havings;
        public readonly string Id;
        public readonly string Json;
        public readonly double? Limit;
        public readonly ImmutableArray<Outputs.GetQuerySpecificationOrderResult> Orders;
        public readonly double? StartTime;
        public readonly double? TimeRange;

        [OutputConstructor]
        private GetQuerySpecificationResult(
            ImmutableArray<string> breakdowns,

            ImmutableArray<Outputs.GetQuerySpecificationCalculatedFieldResult> calculatedFields,

            ImmutableArray<Outputs.GetQuerySpecificationCalculationResult> calculations,

            double? endTime,

            string? filterCombination,

            ImmutableArray<Outputs.GetQuerySpecificationFilterResult> filters,

            double? granularity,

            ImmutableArray<Outputs.GetQuerySpecificationHavingResult> havings,

            string id,

            string json,

            double? limit,

            ImmutableArray<Outputs.GetQuerySpecificationOrderResult> orders,

            double? startTime,

            double? timeRange)
        {
            Breakdowns = breakdowns;
            CalculatedFields = calculatedFields;
            Calculations = calculations;
            EndTime = endTime;
            FilterCombination = filterCombination;
            Filters = filters;
            Granularity = granularity;
            Havings = havings;
            Id = id;
            Json = json;
            Limit = limit;
            Orders = orders;
            StartTime = startTime;
            TimeRange = timeRange;
        }
    }
}
