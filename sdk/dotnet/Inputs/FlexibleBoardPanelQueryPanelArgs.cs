// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio.Inputs
{

    public sealed class FlexibleBoardPanelQueryPanelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Query annotation ID.
        /// </summary>
        [Input("queryAnnotationId", required: true)]
        public Input<string> QueryAnnotationId { get; set; } = null!;

        /// <summary>
        /// Query ID to be rendered in the panel.
        /// </summary>
        [Input("queryId", required: true)]
        public Input<string> QueryId { get; set; } = null!;

        /// <summary>
        /// The visual style of the query (e.g., 'graph', 'combo').
        /// </summary>
        [Input("queryStyle")]
        public Input<string>? QueryStyle { get; set; }

        [Input("visualizationSettings")]
        private InputList<Inputs.FlexibleBoardPanelQueryPanelVisualizationSettingArgs>? _visualizationSettings;
        public InputList<Inputs.FlexibleBoardPanelQueryPanelVisualizationSettingArgs> VisualizationSettings
        {
            get => _visualizationSettings ?? (_visualizationSettings = new InputList<Inputs.FlexibleBoardPanelQueryPanelVisualizationSettingArgs>());
            set => _visualizationSettings = value;
        }

        public FlexibleBoardPanelQueryPanelArgs()
        {
        }
        public static new FlexibleBoardPanelQueryPanelArgs Empty => new FlexibleBoardPanelQueryPanelArgs();
    }
}
