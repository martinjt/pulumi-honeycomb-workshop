// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio.Inputs
{

    public sealed class BurnAlertRecipientGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of an existing recipient.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("notificationDetails")]
        private InputList<Inputs.BurnAlertRecipientNotificationDetailGetArgs>? _notificationDetails;

        /// <summary>
        /// Additional details to send along with the notification.
        /// </summary>
        public InputList<Inputs.BurnAlertRecipientNotificationDetailGetArgs> NotificationDetails
        {
            get => _notificationDetails ?? (_notificationDetails = new InputList<Inputs.BurnAlertRecipientNotificationDetailGetArgs>());
            set => _notificationDetails = value;
        }

        /// <summary>
        /// Target of the notification, this has another meaning depending on the type of recipient.
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        /// <summary>
        /// The type of the notification recipient.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public BurnAlertRecipientGetArgs()
        {
        }
        public static new BurnAlertRecipientGetArgs Empty => new BurnAlertRecipientGetArgs();
    }
}
