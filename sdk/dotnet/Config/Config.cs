// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.Honeycombio
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("honeycombio");

        private static readonly __Value<string?> _apiKey = new __Value<string?>(() => __config.Get("apiKey"));
        /// <summary>
        /// The Honeycomb API key to use. It can also be set via the `HONEYCOMB_API_KEY` or `HONEYCOMBIO_APIKEY` environment
        /// variables.
        /// </summary>
        public static string? ApiKey
        {
            get => _apiKey.Get();
            set => _apiKey.Set(value);
        }

        private static readonly __Value<string?> _apiKeyId = new __Value<string?>(() => __config.Get("apiKeyId"));
        /// <summary>
        /// The ID portion of the Honeycomb Management API key to use. It can also be set via the `HONEYCOMB_KEY_ID` environment
        /// variable.
        /// </summary>
        public static string? ApiKeyId
        {
            get => _apiKeyId.Get();
            set => _apiKeyId.Set(value);
        }

        private static readonly __Value<string?> _apiKeySecret = new __Value<string?>(() => __config.Get("apiKeySecret"));
        /// <summary>
        /// The secret portion of the Honeycomb Management API key to use. It can also be set via the `HONEYCOMB_KEY_SECRET`
        /// environment variable.
        /// </summary>
        public static string? ApiKeySecret
        {
            get => _apiKeySecret.Get();
            set => _apiKeySecret.Set(value);
        }

        private static readonly __Value<string?> _apiUrl = new __Value<string?>(() => __config.Get("apiUrl"));
        /// <summary>
        /// Override the URL of the Honeycomb API. Defaults to `https://api.honeycomb.io`. It can also be set via the
        /// `HONEYCOMB_API_ENDPOINT` environment variable.
        /// </summary>
        public static string? ApiUrl
        {
            get => _apiUrl.Get();
            set => _apiUrl.Set(value);
        }

        private static readonly __Value<bool?> _debug = new __Value<bool?>(() => __config.GetBoolean("debug"));
        /// <summary>
        /// Enable the API client's debug logs. By default, a `TF_LOG` setting of debug or higher will enable this.
        /// </summary>
        public static bool? Debug
        {
            get => _debug.Get();
            set => _debug.Set(value);
        }

    }
}
