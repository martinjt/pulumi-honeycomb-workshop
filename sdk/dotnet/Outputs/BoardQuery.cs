// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio.Outputs
{

    [OutputType]
    public sealed class BoardQuery
    {
        /// <summary>
        /// Descriptive text to contextualize the Query within the Board. Supports Markdown.
        /// </summary>
        public readonly string? Caption;
        /// <summary>
        /// The Dataset this Query is associated with.
        /// </summary>
        public readonly string? Dataset;
        /// <summary>
        /// Manages the settings for this query's graph on the board.
        /// See [Display Settings](https://docs.honeycomb.io/investigate/query/customize-results/#display-settings-menu) in the documentation for more information.
        /// </summary>
        public readonly ImmutableArray<Outputs.BoardQueryGraphSetting> GraphSettings;
        /// <summary>
        /// The ID of the Query Annotation to associate with this Query.
        /// </summary>
        public readonly string? QueryAnnotationId;
        /// <summary>
        /// The ID of the Query to run.
        /// </summary>
        public readonly string QueryId;
        /// <summary>
        /// How the query should be displayed within the Board.
        /// </summary>
        public readonly string? QueryStyle;

        [OutputConstructor]
        private BoardQuery(
            string? caption,

            string? dataset,

            ImmutableArray<Outputs.BoardQueryGraphSetting> graphSettings,

            string? queryAnnotationId,

            string queryId,

            string? queryStyle)
        {
            Caption = caption;
            Dataset = dataset;
            GraphSettings = graphSettings;
            QueryAnnotationId = queryAnnotationId;
            QueryId = queryId;
            QueryStyle = queryStyle;
        }
    }
}
