// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    public static class GetColumns
    {
        public static Task<GetColumnsResult> InvokeAsync(GetColumnsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetColumnsResult>("honeycombio:index/getColumns:getColumns", args ?? new GetColumnsArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetColumnsResult> Invoke(GetColumnsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetColumnsResult>("honeycombio:index/getColumns:getColumns", args ?? new GetColumnsInvokeArgs(), options.WithDefaults());

        public static Output<GetColumnsResult> Invoke(GetColumnsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetColumnsResult>("honeycombio:index/getColumns:getColumns", args ?? new GetColumnsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetColumnsArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataset", required: true)]
        public string Dataset { get; set; } = null!;

        [Input("id")]
        public string? Id { get; set; }

        [Input("startsWith")]
        public string? StartsWith { get; set; }

        public GetColumnsArgs()
        {
        }
        public static new GetColumnsArgs Empty => new GetColumnsArgs();
    }

    public sealed class GetColumnsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataset", required: true)]
        public Input<string> Dataset { get; set; } = null!;

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("startsWith")]
        public Input<string>? StartsWith { get; set; }

        public GetColumnsInvokeArgs()
        {
        }
        public static new GetColumnsInvokeArgs Empty => new GetColumnsInvokeArgs();
    }


    [OutputType]
    public sealed class GetColumnsResult
    {
        public readonly string Dataset;
        public readonly string Id;
        public readonly ImmutableArray<string> Names;
        public readonly string? StartsWith;

        [OutputConstructor]
        private GetColumnsResult(
            string dataset,

            string id,

            ImmutableArray<string> names,

            string? startsWith)
        {
            Dataset = dataset;
            Id = id;
            Names = names;
            StartsWith = startsWith;
        }
    }
}
