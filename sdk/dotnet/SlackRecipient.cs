// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    [HoneycombioResourceType("honeycombio:index/slackRecipient:SlackRecipient")]
    public partial class SlackRecipient : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Slack channel or username to send the notification to. Must begin with `#` or `@` or be a valid channel id e.g.
        /// `CABC123DEF.
        /// </summary>
        [Output("channel")]
        public Output<string> Channel { get; private set; } = null!;

        [Output("slackRecipientId")]
        public Output<string> SlackRecipientId { get; private set; } = null!;


        /// <summary>
        /// Create a SlackRecipient resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SlackRecipient(string name, SlackRecipientArgs args, CustomResourceOptions? options = null)
            : base("honeycombio:index/slackRecipient:SlackRecipient", name, args ?? new SlackRecipientArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private SlackRecipient(string name, Input<string> id, SlackRecipientState? state = null, CustomResourceOptions? options = null)
            : base("honeycombio:index/slackRecipient:SlackRecipient", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SlackRecipient resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SlackRecipient Get(string name, Input<string> id, SlackRecipientState? state = null, CustomResourceOptions? options = null)
        {
            return new SlackRecipient(name, id, state, options);
        }
    }

    public sealed class SlackRecipientArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Slack channel or username to send the notification to. Must begin with `#` or `@` or be a valid channel id e.g.
        /// `CABC123DEF.
        /// </summary>
        [Input("channel", required: true)]
        public Input<string> Channel { get; set; } = null!;

        [Input("slackRecipientId")]
        public Input<string>? SlackRecipientId { get; set; }

        public SlackRecipientArgs()
        {
        }
        public static new SlackRecipientArgs Empty => new SlackRecipientArgs();
    }

    public sealed class SlackRecipientState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Slack channel or username to send the notification to. Must begin with `#` or `@` or be a valid channel id e.g.
        /// `CABC123DEF.
        /// </summary>
        [Input("channel")]
        public Input<string>? Channel { get; set; }

        [Input("slackRecipientId")]
        public Input<string>? SlackRecipientId { get; set; }

        public SlackRecipientState()
        {
        }
        public static new SlackRecipientState Empty => new SlackRecipientState();
    }
}
