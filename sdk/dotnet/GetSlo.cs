// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Honeycombio
{
    public static class GetSlo
    {
        public static Task<GetSloResult> InvokeAsync(GetSloArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSloResult>("honeycombio:index/getSlo:getSlo", args ?? new GetSloArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetSloResult> Invoke(GetSloInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSloResult>("honeycombio:index/getSlo:getSlo", args ?? new GetSloInvokeArgs(), options.WithDefaults());

        public static Output<GetSloResult> Invoke(GetSloInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSloResult>("honeycombio:index/getSlo:getSlo", args ?? new GetSloInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSloArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataset")]
        public string? Dataset { get; set; }

        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSloArgs()
        {
        }
        public static new GetSloArgs Empty => new GetSloArgs();
    }

    public sealed class GetSloInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSloInvokeArgs()
        {
        }
        public static new GetSloInvokeArgs Empty => new GetSloInvokeArgs();
    }


    [OutputType]
    public sealed class GetSloResult
    {
        public readonly string Dataset;
        public readonly ImmutableArray<string> Datasets;
        public readonly string Description;
        public readonly string Id;
        public readonly string Name;
        public readonly string Sli;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly double TargetPercentage;
        public readonly double TimePeriod;

        [OutputConstructor]
        private GetSloResult(
            string dataset,

            ImmutableArray<string> datasets,

            string description,

            string id,

            string name,

            string sli,

            ImmutableDictionary<string, string> tags,

            double targetPercentage,

            double timePeriod)
        {
            Dataset = dataset;
            Datasets = datasets;
            Description = description;
            Id = id;
            Name = name;
            Sli = sli;
            Tags = tags;
            TargetPercentage = targetPercentage;
            TimePeriod = timePeriod;
        }
    }
}
